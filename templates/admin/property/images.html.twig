{% extends 'admin/base.html.twig' %}

{% block title %}Изображения - {{ property.titleBg }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/min/dropzone.min.css">
    <style>
        .dropzone {
            border: 2px dashed #0087F7;
            border-radius: 5px;
            background: white;
            margin-bottom: 1rem;
        }
        .dropzone .dz-message {
            font-weight: 400;
        }
        .dropzone .dz-message .note {
            font-size: 0.8em;
            font-weight: 200;
            display: block;
            margin-top: 1.4rem;
        }
        .property-images {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }
        .image-card {
            position: relative;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .image-card img {
            width: 100%;
            height: 150px;
            object-fit: cover;
        }
        .image-actions {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            display: flex;
            gap: 0.5rem;
        }
        .image-actions button {
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            border: none;
            background: rgba(255,255,255,0.9);
            cursor: pointer;
            transition: all 0.2s;
        }
        .image-actions button:hover {
            background: white;
        }
        .main-image-badge {
            position: absolute;
            top: 0.5rem;
            left: 0.5rem;
            background: var(--bs-primary);
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.8rem;
        }
        .badge-360 {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            background: var(--bs-secondary);
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.8rem;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h2">Снимки - {{ property.titleBg }}</h1>
            <a href="{{ path('admin_property_edit', {'id': property.id}) }}" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Назад към имота
            </a>
        </div>

        <div class="card">
            <div class="card-body">
                <form action="{{ path('admin_property_image_upload', {'id': property.id}) }}" class="dropzone" id="propertyImages">
                    <input type="hidden" name="_token" value="{{ csrf_token('upload') }}">
                    <div class="dz-message" data-dz-message>
                        <span>Пуснете файлове тук или кликнете за да качите</span>
                        <span class="note">(Позволени формати: JPG, PNG, GIF, WEBP. Максимален размер: 5MB)</span>
                    </div>
                </form>

                <div class="form-check mt-3 mb-3">
                    <input class="form-check-input" type="checkbox" id="is360" name="is360">
                    <label class="form-check-label" for="is360">
                        360° изображение
                    </label>
                </div>

                <div class="property-images">
                    {% for image in property.images %}
                        <div class="image-card" data-image-id="{{ image.id }}">
                            {% if image.isMain %}
                                <span class="main-image-badge">Основна</span>
                            {% endif %}
                            {% if image.is360 %}
                                <span class="badge-360">360°</span>
                            {% endif %}
                            <img src="{{ asset('uploads/images/properties/' ~ property.id ~ '/' ~ image.filename) }}" alt="{{ property.titleBg }}">
                            <div class="image-actions">
                                {% if not image.isMain %}
                                    <button type="button" class="set-main-image" title="Задай като основна" 
                                            onclick="setMainImage({{ property.id }}, {{ image.id }})">
                                        <i class="bi bi-star"></i>
                                    </button>
                                {% endif %}
                                <button type="button" class="text-danger" title="Изтрий" 
                                        onclick="deleteImage({{ property.id }}, {{ image.id }})">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/min/dropzone.min.js"></script>
    <script>
        Dropzone.options.propertyImages = {
            paramName: "file",
            maxFilesize: 5,
            acceptedFiles: "image/*",
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            },
            init: function() {
                this.on("sending", function(file, xhr, formData) {
                    // Добавяме CSRF токена към заявката
                    formData.append("_token", document.querySelector('input[name="_token"]').value);
                    // Добавяме стойността на is360 чекбокса
                    formData.append("is360", document.querySelector('#is360').checked);
                });
                
                this.on("success", function(file, response) {
                    if (response.success) {
                        // Вместо да презареждаме страницата, добавяме новата снимка към галерията
                        const imageCard = createImageCard(response.image);
                        document.querySelector('.property-images').appendChild(imageCard);
                        this.removeFile(file);
                        // Нулираме чекбокса
                        document.querySelector('#is360').checked = false;
                    } else {
                        alert('Грешка при качване на файла: ' + response.error);
                    }
                });
                
                this.on("error", function(file, errorMessage) {
                    alert('Грешка при качване на файла: ' + errorMessage);
                    this.removeFile(file);
                });
            }
        };

        function createImageCard(image) {
            const card = document.createElement('div');
            card.className = 'image-card';
            card.dataset.imageId = image.id;
            
            let badges = '';
            if (image.is360) {
                badges += '<span class="badge-360">360°</span>';
            }
            
            card.innerHTML = `
                ${badges}
                <img src="${image.path}" alt="">
                <div class="image-actions">
                    <button type="button" class="set-main-image" title="Задай като основна" 
                            onclick="setMainImage({{ property.id }}, ${image.id})">
                        <i class="bi bi-star"></i>
                    </button>
                    <button type="button" class="text-danger" title="Изтрий" 
                            onclick="deleteImage({{ property.id }}, ${image.id})">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            `;
            
            return card;
        }

        function setMainImage(propertyId, imageId) {
            fetch(`/admin/properties/${propertyId}/image/${imageId}/set-main`, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Грешка при задаване на основна снимка: ' + data.error);
                }
            });
        }

        function deleteImage(propertyId, imageId) {
            if (confirm('Сигурни ли сте, че искате да изтриете тази снимка?')) {
                fetch(`/admin/properties/${propertyId}/delete-image/${imageId}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.querySelector(`[data-image-id="${imageId}"]`).remove();
                    } else {
                        alert('Грешка при изтриване на снимката: ' + data.error);
                    }
                });
            }
        }
    </script>
{% endblock %} 