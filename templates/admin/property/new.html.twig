{% extends 'admin/base.html.twig' %}

{% block title %}Добавяне на нов имот{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://js.api.here.com/v3/3.1/mapsjs-ui.css" type="text/css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <style>
        #locationMap {
            width: 100%;
            height: 400px;
            border-radius: 0.5rem;
            margin-bottom: 1rem;
            border: 1px solid #e9ecef;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    <div class="property-form">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3 mb-0">Добавяне на нов имот</h1>
            <div>
                <a href="{{ path('admin_property_index') }}" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Назад към списъка
                </a>
            </div>
        </div>

        {% include 'admin/shared/alerts.html.twig' %}

        {{ form_start(form) }}
        
        <!-- Основна информация -->
        <div class="form-section">
            <h4 class="form-section-title">
                <i class="bi bi-info-circle"></i> Основна информация
            </h4>
            
            <div class="row mb-4">
                <div class="col-md-6">
                    {{ form_row(form.type) }}
                </div>
                <div class="col-md-3">
                    {{ form_row(form.area) }}
                </div>
                <div class="col-md-3">
                    {{ form_row(form.price) }}
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-check mb-3">
                        {{ form_widget(form.isActive) }}
                        {{ form_label(form.isActive) }}
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-check mb-3">
                        {{ form_widget(form.isFeatured) }}
                        {{ form_label(form.isFeatured) }}
                    </div>
                </div>
            </div>
        </div>

        <!-- Описание на различни езици -->
        <div class="form-section">
            <h4 class="form-section-title">
                <i class="bi bi-translate"></i> Описание на различни езици
            </h4>
            
            <ul class="nav nav-tabs mb-4" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" data-bs-toggle="tab" href="#bg">
                        <i class="bi bi-globe"></i> Български
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#en">
                        <i class="bi bi-globe"></i> English
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#de">
                        <i class="bi bi-globe"></i> Deutsch
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#ru">
                        <i class="bi bi-globe"></i> Русский
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <div class="tab-pane fade show active" id="bg">
                    {{ form_row(form.titleBg) }}
                    {{ form_row(form.descriptionBg) }}
                    {{ form_row(form.locationBg) }}
                </div>
                <div class="tab-pane fade" id="en">
                    {{ form_row(form.titleEn) }}
                    {{ form_row(form.descriptionEn) }}
                    {{ form_row(form.locationEn) }}
                </div>
                <div class="tab-pane fade" id="de">
                    {{ form_row(form.titleDe) }}
                    {{ form_row(form.descriptionDe) }}
                    {{ form_row(form.locationDe) }}
                </div>
                <div class="tab-pane fade" id="ru">
                    {{ form_row(form.titleRu) }}
                    {{ form_row(form.descriptionRu) }}
                    {{ form_row(form.locationRu) }}
                </div>
            </div>
        </div>

        <!-- Локация -->
        <div class="form-section">
            <h4 class="form-section-title">
                <i class="bi bi-geo-alt"></i> Локация
            </h4>
            
            <div class="mb-3">
                {{ form_label(form.address) }}
                <div class="address-input-wrapper">
                    <div class="input-group">
                        {{ form_widget(form.address, {'attr': {'class': 'form-control', 'autocomplete': 'off'}}) }}
                        <button class="btn btn-outline-primary" type="button" id="geocodeAddress">
                            <i class="bi bi-search"></i> Намери координати
                        </button>
                    </div>
                    <div id="addressSuggestions" class="address-suggestions"></div>
                </div>
                <small class="form-text text-muted">Въведете адрес във формат: улица и номер, град, държава. За по-точни резултати включете пощенски код.</small>
                {{ form_errors(form.address) }}
                <div id="geocodeResults" class="mt-2" style="display: none;">
                    <p class="mb-1">Намерени резултати:</p>
                    <ul id="geocodeResultsList" class="list-group"></ul>
                </div>
            </div>

            <div id="locationMap"></div>

            <div class="coordinates-wrapper">
                <div class="form-group">
                    {{ form_row(form.latitude) }}
                </div>
                <div class="form-group">
                    {{ form_row(form.longitude) }}
                </div>
            </div>
        </div>

        <!-- PDF Expose -->
        <div class="form-section">
            <h4 class="form-section-title">
                <i class="bi bi-file-pdf"></i> PDF Файлове
            </h4>
            
            {{ form_row(form.expose.exposeFile) }}
        </div>

        {{ form_rest(form) }}

        <!-- Бутони -->
        <div class="form-section">
            <div class="d-flex justify-content-end gap-2">
                <a href="{{ path('admin_property_index') }}" class="btn btn-outline-secondary">
                    <i class="bi bi-x"></i> Отказ
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-lg"></i> Създай имот
                </button>
            </div>
        </div>

        {{ form_end(form) }}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/@ckeditor/ckeditor5-build-classic/build/ckeditor.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // CKEditor initialization
            const editors = ['descriptionBg', 'descriptionEn', 'descriptionDe', 'descriptionRu'];
            
            editors.forEach(function(editorId) {
                const element = document.querySelector('#property_' + editorId);
                if (element) {
                    ClassicEditor
                        .create(element, {
                            toolbar: [
                                'heading',
                                '|',
                                'bold',
                                'italic',
                                'link',
                                'bulletedList',
                                'numberedList',
                                '|',
                                'undo',
                                'redo'
                            ],
                            heading: {
                                options: [
                                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }
                                ]
                            }
                        })
                        .then(editor => {
                            window[`editor_${editorId}`] = editor;
                        })
                        .catch(error => {
                            console.error(error);
                        });
                }
            });
            
            // Select2 initialization for type field
            $('#property_type').select2({
                theme: 'bootstrap-5',
                placeholder: "Изберете тип имот",
                allowClear: true,
                templateResult: formatPropertyTypeOption
            });
            
            function formatPropertyTypeOption(option) {
                if (!option.id) {
                    return option.text;
                }
                
                const $option = $(option.element);
                const isChild = $option.data('is-child');
                
                if (isChild) {
                    return $('<span class="child-option"></span>').text(option.text);
                }
                
                return option.text;
            }

            // Leaflet map initialization
            const mapContainer = document.getElementById('locationMap');
            
            if (mapContainer) {
                const map = L.map('locationMap').setView([42.6977, 23.3219], 13);
                
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                
                let marker;
                const latInput = document.getElementById('property_latitude');
                const lngInput = document.getElementById('property_longitude');
                
                // Initialize marker if coordinates exist
                if (latInput.value && lngInput.value) {
                    const lat = parseFloat(latInput.value);
                    const lng = parseFloat(lngInput.value);
                    
                    if (!isNaN(lat) && !isNaN(lng)) {
                        map.setView([lat, lng], 15);
                        marker = L.marker([lat, lng]).addTo(map);
                    }
                }
                
                // Update coordinates when clicking on map
                map.on('click', function(e) {
                    if (marker) {
                        map.removeLayer(marker);
                    }
                    
                    marker = L.marker(e.latlng).addTo(map);
                    
                    latInput.value = e.latlng.lat.toFixed(6);
                    lngInput.value = e.latlng.lng.toFixed(6);
                });
                
                // Geocode address
                const geocodeButton = document.getElementById('geocodeAddress');
                const addressInput = document.getElementById('property_address');
                const geocodeResults = document.getElementById('geocodeResults');
                const geocodeResultsList = document.getElementById('geocodeResultsList');
                
                geocodeButton.addEventListener('click', function() {
                    const address = addressInput.value;
                    
                    if (!address) {
                        return;
                    }
                    
                    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}&limit=5`;
                    
                    fetch(url)
                        .then(response => response.json())
                        .then(data => {
                            geocodeResultsList.innerHTML = '';
                            
                            if (data.length > 0) {
                                geocodeResults.style.display = 'block';
                                
                                data.forEach(result => {
                                    const li = document.createElement('li');
                                    li.className = 'list-group-item';
                                    li.textContent = result.display_name;
                                    li.style.cursor = 'pointer';
                                    
                                    li.addEventListener('click', function() {
                                        const lat = parseFloat(result.lat);
                                        const lng = parseFloat(result.lon);
                                        
                                        if (marker) {
                                            map.removeLayer(marker);
                                        }
                                        
                                        map.setView([lat, lng], 15);
                                        marker = L.marker([lat, lng]).addTo(map);
                                        
                                        latInput.value = lat.toFixed(6);
                                        lngInput.value = lng.toFixed(6);
                                        
                                        geocodeResults.style.display = 'none';
                                    });
                                    
                                    geocodeResultsList.appendChild(li);
                                });
                            } else {
                                geocodeResults.style.display = 'block';
                                const li = document.createElement('li');
                                li.className = 'list-group-item';
                                li.textContent = 'Не са намерени резултати. Опитайте с по-точен адрес.';
                                geocodeResultsList.appendChild(li);
                            }
                        })
                        .catch(error => {
                            console.error('Error geocoding address:', error);
                        });
                });
            }
        });
    </script>
{% endblock %} 